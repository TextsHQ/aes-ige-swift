import XCTest
@testable import AESIGE

private struct TestCase {
    public let key: Data
    public let iv: Data
    public let cipherText: Data
    public let result: Data
}

final class AESIGETests: XCTestCase {
    // test data from https://github.com/openssl/openssl/blob/master/test/igetest.c
    private static let decryptTest = TestCase(
        key: Data([
            0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20,
            0x61, 0x6e, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65
        ]),
        iv: Data([
            0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
            0x6e, 0x20, 0x6f, 0x66, 0x20, 0x49, 0x47, 0x45,
            0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x66, 0x6f,
            0x72, 0x20, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x53
        ]),
        cipherText: Data([
            0x4c, 0x2e, 0x20, 0x4c, 0x65, 0x74, 0x27, 0x73,
            0x20, 0x68, 0x6f, 0x70, 0x65, 0x20, 0x42, 0x65,
            0x6e, 0x20, 0x67, 0x6f, 0x74, 0x20, 0x69, 0x74,
            0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x21, 0x0a
        ]),
        result: Data([
            0x99, 0x70, 0x64, 0x87, 0xa1, 0xcd, 0xe6, 0x13,
            0xbc, 0x6d, 0xe0, 0xb6, 0xf2, 0x4b, 0x1c, 0x7a,
            0xa4, 0x48, 0xc8, 0xb9, 0xc3, 0x40, 0x3e, 0x34,
            0x67, 0xa8, 0xca, 0xd8, 0x93, 0x40, 0xf5, 0x3b
        ])
    )

    func testAESIGEDecrypt() throws {
        let aes = try AESIGE(key: Self.decryptTest.key, iv: Self.decryptTest.iv)
        let decrypted = try aes.decrypt(buffer: Self.decryptTest.cipherText)

        XCTAssertEqual(decrypted, Self.decryptTest.result)
    }
}
